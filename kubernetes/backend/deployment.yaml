apiVersion: apps/v1
kind: Deployment
metadata:
  name: mental-health-backend
  namespace: mental-health-platform
  labels:
    app: mental-health-platform
    component: backend
    tier: application
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: mental-health-platform
      component: backend
      tier: application
  template:
    metadata:
      labels:
        app: mental-health-platform
        component: backend
        tier: application
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: mental-health-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: backend
        image: mental-health-platform/backend:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3001
          protocol: TCP
        - name: websocket
          containerPort: 3002
          protocol: TCP
        env:
        # Application Configuration
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: mental-health-app-config
              key: NODE_ENV
        - name: PORT
          value: "3001"
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: mental-health-app-config
              key: LOG_LEVEL
        
        # Database Configuration
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: mental-health-app-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: mental-health-app-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: mental-health-app-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: mental-health-app-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mental-health-secrets
              key: DB_PASSWORD
        - name: DB_SSL_MODE
          valueFrom:
            configMapKeyRef:
              name: mental-health-app-config
              key: DB_SSL_MODE
        
        # Redis Configuration
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: mental-health-app-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: mental-health-app-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mental-health-secrets
              key: REDIS_PASSWORD
        
        # Security Configuration
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: mental-health-secrets
              key: JWT_SECRET
        - name: JWT_REFRESH_SECRET
          valueFrom:
            secretKeyRef:
              name: mental-health-secrets
              key: JWT_REFRESH_SECRET
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: mental-health-secrets
              key: ENCRYPTION_KEY
        
        # Crisis Management
        - name: CRISIS_OVERRIDE_KEY
          valueFrom:
            secretKeyRef:
              name: mental-health-secrets
              key: CRISIS_OVERRIDE_KEY
        - name: HOTLINE_API_KEY
          valueFrom:
            secretKeyRef:
              name: mental-health-secrets
              key: HOTLINE_API_KEY
        
        # External Services
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: mental-health-secrets
              key: SENDGRID_API_KEY
        - name: TWILIO_ACCOUNT_SID
          valueFrom:
            secretKeyRef:
              name: mental-health-secrets
              key: TWILIO_ACCOUNT_SID
        - name: TWILIO_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: mental-health-secrets
              key: TWILIO_AUTH_TOKEN
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: mental-health-secrets
              key: OPENAI_API_KEY
        
        # Monitoring
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: mental-health-secrets
              key: SENTRY_DSN
        
        volumeMounts:
        - name: app-config
          mountPath: /app/config
          readOnly: true
        - name: uploads
          mountPath: /app/uploads
        - name: logs
          mountPath: /app/logs
        - name: temp
          mountPath: /tmp
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health/startup
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 10
        
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1"
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
      
      # Sidecar: Crisis Detection Service
      - name: crisis-detector
        image: mental-health-platform/crisis-detector:latest
        imagePullPolicy: Always
        ports:
        - name: crisis-api
          containerPort: 8080
          protocol: TCP
        env:
        - name: CRISIS_MODEL_PATH
          value: "/models/crisis-detection-model"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: mental-health-app-config
              key: REDIS_HOST
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mental-health-secrets
              key: REDIS_PASSWORD
        - name: ALERT_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: mental-health-secrets
              key: EMERGENCY_NOTIFICATION_WEBHOOK
        volumeMounts:
        - name: crisis-models
          mountPath: /models
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /health
            port: crisis-api
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: crisis-api
          initialDelaySeconds: 5
          periodSeconds: 5
      
      volumes:
      - name: app-config
        configMap:
          name: mental-health-app-config
      - name: uploads
        persistentVolumeClaim:
          claimName: mental-health-uploads-pvc
      - name: logs
        emptyDir: {}
      - name: temp
        emptyDir:
          medium: Memory
          sizeLimit: 100Mi
      - name: crisis-models
        configMap:
          name: crisis-detection-models
      
      imagePullSecrets:
      - name: mental-health-registry-secret
      
      terminationGracePeriodSeconds: 30
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - backend
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-type
                operator: In
                values:
                - compute
              - key: cpu-optimized
                operator: In
                values:
                - "true"

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: mental-health-platform
  labels:
    app: mental-health-platform
    component: backend
    tier: application
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3001"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3001
    targetPort: http
    protocol: TCP
  - name: websocket
    port: 3002
    targetPort: websocket
    protocol: TCP
  - name: crisis-api
    port: 8080
    targetPort: crisis-api
    protocol: TCP
  selector:
    app: mental-health-platform
    component: backend
    tier: application

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: mental-health-platform
  labels:
    app: mental-health-platform
    component: backend
    tier: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mental-health-backend
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  # Crisis-specific scaling metrics
  - type: Pods
    pods:
      metric:
        name: crisis_requests_per_second
      target:
        type: AverageValue
        averageValue: "10"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 5
        periodSeconds: 30

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mental-health-uploads-pvc
  namespace: mental-health-platform
  labels:
    app: mental-health-platform
    component: storage
    tier: data
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: file-storage

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-pdb
  namespace: mental-health-platform
  labels:
    app: mental-health-platform
    component: backend
    tier: application
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: mental-health-platform
      component: backend
      tier: application