apiVersion: v1
kind: ConfigMap
metadata:
  name: mental-health-app-config
  namespace: mental-health-platform
  labels:
    app: mental-health-platform
    component: configuration
    tier: application
data:
  # Application Configuration
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  API_VERSION: "v1"
  
  # Database Configuration
  DB_HOST: "postgresql-primary-service"
  DB_PORT: "5432"
  DB_NAME: "mental_health_platform"
  DB_USER: "mental_health_app"
  DB_POOL_SIZE: "20"
  DB_MAX_CONNECTIONS: "100"
  DB_SSL_MODE: "require"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  REDIS_SSL_ENABLED: "true"
  
  # Security Configuration
  JWT_EXPIRY: "15m"
  JWT_REFRESH_EXPIRY: "7d"
  SESSION_TIMEOUT: "3600"
  CORS_ORIGINS: "https://mentalhealthplatform.com,https://www.mentalhealthplatform.com"
  
  # Crisis Management Configuration
  CRISIS_RESPONSE_TIMEOUT: "5"
  CRISIS_ESCALATION_DELAY: "30"
  EMERGENCY_CONTACT_RETRIES: "3"
  HOTLINE_988_ENABLED: "true"
  
  # Feature Flags
  FEATURE_AI_THERAPY: "true"
  FEATURE_PEER_SUPPORT: "true"
  FEATURE_CRISIS_DETECTION: "true"
  FEATURE_TELETHERAPY: "true"
  FEATURE_ANALYTICS: "true"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  TRACING_ENABLED: "true"
  HEALTH_CHECK_INTERVAL: "30"
  PERFORMANCE_MONITORING: "true"
  
  # File Upload Configuration
  MAX_FILE_SIZE: "10MB"
  ALLOWED_FILE_TYPES: "image/jpeg,image/png,application/pdf,text/plain"
  UPLOAD_TIMEOUT: "120"
  
  # Rate Limiting
  RATE_LIMIT_WINDOW: "15"
  RATE_LIMIT_MAX: "100"
  RATE_LIMIT_CRISIS_MAX: "1000"
  
  # Notification Configuration
  NOTIFICATION_QUEUE_SIZE: "1000"
  NOTIFICATION_RETRY_ATTEMPTS: "3"
  NOTIFICATION_TIMEOUT: "30"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mental-health-nginx-config
  namespace: mental-health-platform
  labels:
    app: mental-health-platform
    component: nginx
    tier: frontend
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 2048;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # HIPAA Compliance Headers
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' wss: https:; font-src 'self'; object-src 'none'; media-src 'self';" always;
        
        # Performance Optimizations
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 50M;
        
        # Compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            application/atom+xml
            application/javascript
            application/json
            application/ld+json
            application/manifest+json
            application/rss+xml
            application/vnd.geo+json
            application/vnd.ms-fontobject
            application/x-font-ttf
            application/x-web-app-manifest+json
            font/opentype
            image/bmp
            image/svg+xml
            image/x-icon
            text/cache-manifest
            text/css
            text/plain
            text/vcard
            text/vnd.rim.location.xloc
            text/vtt
            text/x-component
            text/x-cross-domain-policy;

        # Rate Limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=crisis:10m rate=100r/s;
        
        upstream backend {
            least_conn;
            server backend-service:3001 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        server {
            listen 80;
            server_name _;
            return 301 https://$host$request_uri;
        }
        
        server {
            listen 443 ssl http2;
            server_name mentalhealthplatform.com www.mentalhealthplatform.com;
            
            ssl_certificate /etc/ssl/certs/tls.crt;
            ssl_certificate_key /etc/ssl/private/tls.key;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
            ssl_prefer_server_ciphers off;
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;
            
            root /usr/share/nginx/html;
            index index.html index.htm;
            
            # Crisis endpoints - highest priority, no rate limiting
            location /api/crisis {
                limit_req zone=crisis burst=20 nodelay;
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_read_timeout 300s;
                proxy_connect_timeout 75s;
            }
            
            # API endpoints
            location /api {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
            }
            
            # WebSocket endpoints
            location /ws {
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_read_timeout 86400;
            }
            
            # Static files
            location / {
                try_files $uri $uri/ /index.html;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            
            # Health check
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Security
            location ~ /\. {
                deny all;
            }
        }
    }